@use './typography' as *;
@use './breakpoints' as *;
@use './elevation' as *;

@mixin overlay($background: linear-gradient(180deg, rgba(0, 19, 51, 0.25) 0%, rgba(0, 14, 38, 0.4) 100%)) {
  position: fixed;
  top: 0;
  left: 0;

  width: 100vw;
  height: 100%;
  background: $background;
}

@mixin media-query($screen-size) {
  $size: map-get($breakpoints, $screen-size);

  @if $size {
    // Desktop first approach
    // TODO: Implement configurable approach
    @media only screen and (min-width: $size) {
      @content;
    }
  }
}

@mixin typography($name) {
  $target: map-get($typography, default);
  $level: map-get($target, $name);

  font-size: map-get($level, font-size);
  font-weight: map-get($level, font-weight);
  line-height: map-get($level, line-height);
  letter-spacing: map-get($level, letter-spacing);

  @each $point, $value in $breakpoints {
    $target: map-get($typography, $point);

    @if $target {
      @include media-query($point) {
        $level: map-get($target, $name);

        @if $level {
          font-size: map-get($level, font-size);
          font-weight: map-get($level, font-weight);
          line-height: map-get($level, line-height);
          letter-spacing: map-get($level, letter-spacing);
        }
      }
    }
  }
}

@mixin flex($dir: row, $wrap: nowrap, $align: flex-start, $justify: flex-start) {
  display: flex;
  flex-direction: $dir;
  flex-wrap: $wrap;
  align-items: $align;
  justify-content: $justify;
}

@mixin flex-child($grow: 0, $shrink: 1, $align: auto) {
  flex-shrink: $shrink;
  flex-grow: $grow;
  align-self: $align;
}

@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin customScrollBar(
  $width: 3px,
  $height: 5px,
  $scrollDefaultColor: var(--palette-text-3),
  $scrollHoverColor: var(--palette-text-3)
) {
  &::-webkit-scrollbar {
    width: $width;
    height: $height;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $scrollDefaultColor;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: $scrollHoverColor;
  }
}

@mixin elevation($theme, $level, $base-color, $dark-shadow: '') {
  @if $theme == light {
    @include light-elevation($level, $base-color);
  } @else if $theme == dark {
    @include dark-elevation($level, $base-color, $dark-shadow);
  }
}
